{"version":3,"sources":["components/Page.js","components/Label.js","components/widgets/WidgetPositions/constants.js","components/widgets/WidgetPositions/ValidationPopup.js","components/alerts/hook.js","components/widgets/WidgetPositions/ModeSelector.js","components/widgets/WidgetPositions/PositionRow.js","components/widgets/WidgetPositions/WidgetPositions.js","components/widgets/WidgetOrder.js","pages/Overview.js"],"names":["Page","forwardRef","ref","children","title","meta","other","propTypes","PropTypes","node","isRequired","string","RootStyle","styled","theme","ownerState","isLight","palette","mode","color","variant","height","minWidth","lineHeight","borderRadius","cursor","alignItems","whiteSpace","display","justifyContent","padding","spacing","grey","fontSize","typography","pxToRem","fontFamily","backgroundColor","fontWeight","fontWeightBold","contrastText","main","styleFilled","border","styleOutlined","alpha","styleGhost","text","primary","secondary","common","white","Label","MODES","NORMAL","label","value","GRACEFUL_STOP","EXIT_ONLY","MANUAL","PANIC","requiresValidation","WIGGLE","Transition","React","props","Slide","direction","ValidationPopup","open","onConfirm","setOpen","onClose","Dialog","TransitionComponent","keepMounted","DialogTitle","DialogContent","DialogContentText","id","DialogActions","Stack","sx","width","Button","onClick","useNotification","useState","conf","setConf","useSnackbar","enqueueSnackbar","closeSnackbar","useEffect","msg","autoHideDuration","action","key","IconButton","anchorOrigin","vertical","horizontal","ModeSelector","currentMode","symbol","position_side","setMode","previousMode","setPreviousMode","openConfirmation","setOpenConfirmation","setErrorRecoil","useSetRecoilState","errorAtom","sendNotification","setUpdatedModeOnServer","requestedMode","axios","post","then","response","catch","err","FormControl","size","Select","onChange","event","target","Object","values","map","m","MenuItem","PositionRow","side","positionSides","useTheme","open_orders","useRecoilValue","dataAtom","cost","entry_price","position_size","current_price","symbolOpenOrders","filter","order","dca_number","order_type_identifier","length","tp_number","TableRow","TableCell","Typography","slice","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Table","TableHead","align","TableBody","sort","order1","order2","price","quantity","type","component","scope","WidgetPositions","positions","Card","CardHeader","mb","Scrollbar","TableContainer","keys","WidgetOrder","latest_orders","CardContent","Timeline","index","OrderItem","isLast","event_time","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","fDateTime","OverviewPage","themeStretch","useSettings","Container","maxWidth","Grid","container","item","xs","md","lg"],"mappings":"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","file":"static/js/4.2d1e84cb.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet-async\";\nimport { forwardRef } from \"react\";\n// @mui\nimport { Box } from \"@mui/material\";\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = \"\", meta, ...other }, ref) => (\n  <>\n    <Helmet>\n      <title>{`${title} | Hawkbot`}</title>\n      {meta}\n    </Helmet>\n\n    <Box ref={ref} {...other}>\n      {children}\n    </Box>\n  </>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n  meta: PropTypes.node,\n};\n\nexport default Page;\n","import PropTypes from \"prop-types\";\n// @mui\nimport { alpha, styled } from \"@mui/material/styles\";\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(\"span\")(({ theme, ownerState }) => {\n  const isLight = theme.palette.mode === \"light\";\n  const { color, variant } = ownerState;\n\n  const styleFilled = (color) => ({\n    color: theme.palette[color].contrastText,\n    backgroundColor: theme.palette[color].main,\n  });\n\n  const styleOutlined = (color) => ({\n    color: theme.palette[color].main,\n    backgroundColor: \"transparent\",\n    border: `1px solid ${theme.palette[color].main}`,\n  });\n\n  const styleGhost = (color) => ({\n    color: theme.palette[color][isLight ? \"dark\" : \"light\"],\n    backgroundColor: alpha(theme.palette[color].main, 0.16),\n  });\n\n  return {\n    height: 22,\n    minWidth: 22,\n    lineHeight: 0,\n    borderRadius: 8,\n    cursor: \"default\",\n    alignItems: \"center\",\n    whiteSpace: \"nowrap\",\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    padding: theme.spacing(0, 1),\n    color: theme.palette.grey[800],\n    fontSize: theme.typography.pxToRem(12),\n    fontFamily: theme.typography.fontFamily,\n    backgroundColor: theme.palette.grey[300],\n    fontWeight: theme.typography.fontWeightBold,\n\n    ...(color !== \"default\"\n      ? {\n          ...(variant === \"filled\" && { ...styleFilled(color) }),\n          ...(variant === \"outlined\" && { ...styleOutlined(color) }),\n          ...(variant === \"ghost\" && { ...styleGhost(color) }),\n        }\n      : {\n          ...(variant === \"outlined\" && {\n            backgroundColor: \"transparent\",\n            color: theme.palette.text.primary,\n            border: `1px solid ${theme.palette.grey[500_32]}`,\n          }),\n          ...(variant === \"ghost\" && {\n            color: isLight ? theme.palette.text.secondary : theme.palette.common.white,\n            backgroundColor: theme.palette.grey[500_16],\n          }),\n        }),\n  };\n});\n\n// ----------------------------------------------------------------------\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\"]),\n  variant: PropTypes.oneOf([\"filled\", \"outlined\", \"ghost\"]),\n};\n\nexport default function Label({ color = \"default\", variant = \"ghost\", children, ...other }) {\n  return (\n    <RootStyle ownerState={{ color, variant }} {...other}>\n      {children}\n    </RootStyle>\n  );\n}\n","export const MODES = {\n  NORMAL: {\n    label: \"NORMAL\",\n    value: \"NORMAL\",\n  },\n  GRACEFUL_STOP: {\n    label: \"GRACEFUL\",\n    value: \"GRACEFUL_STOP\",\n  },\n  EXIT_ONLY: {\n    label: \"EXIT\",\n    value: \"EXIT_ONLY\",\n  },\n  MANUAL: {\n    label: \"MANUAL\",\n    value: \"MANUAL\",\n  },\n  PANIC: {\n    label: \"PANIC\",\n    value: \"PANIC\",\n    requiresValidation: true,\n  },\n  WIGGLE: {\n    label: \"WIGGLE\",\n    value: \"WIGGLE\",\n  },\n};\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Slide from \"@mui/material/Slide\";\nimport { Stack } from \"@mui/material\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function ValidationPopup({ open, setOpen, onConfirm, mode, onClose }) {\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        TransitionComponent={Transition}\n        keepMounted\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle>Warning regarding {mode} mode</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            This mode will sell your position with a MARKET order.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Stack sx={{ width: \"100%\" }} direction=\"row\" justifyContent=\"space-between\">\n            <Button onClick={onClose}>Reject</Button>\n            <Button onClick={onConfirm}>Confirm</Button>\n          </Stack>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/material/SvgIcon/SvgIcon\";\n\nconst useNotification = () => {\n  const [conf, setConf] = useState({});\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    if (conf?.msg) {\n      let variant = \"info\";\n      if (conf.variant) {\n        variant = conf.variant;\n      }\n\n      enqueueSnackbar(conf.msg, {\n        variant: variant,\n        autoHideDuration: 5000,\n        action: (key) => {\n          return (\n            <Fragment>\n              <IconButton\n                onClick={() => {\n                  closeSnackbar(key);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            </Fragment>\n          );\n        },\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        },\n      });\n    }\n  }, [conf, enqueueSnackbar, closeSnackbar]);\n  return [setConf];\n};\n\nexport default useNotification;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { errorAtom } from \"src/recoil/atoms\";\nimport { useSetRecoilState } from \"recoil\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nimport { MODES } from \"./constants\";\nimport ValidationPopup from \"./ValidationPopup\";\nimport useNotification from \"src/components/alerts/hook\";\n\nconst REST_URL = \"http://localhost:6969/setMode\";\n\nexport default function ModeSelector({ currentMode, symbol, position_side }) {\n  const [mode, setMode] = useState(currentMode);\n  const [previousMode, setPreviousMode] = useState(currentMode);\n  const [openConfirmation, setOpenConfirmation] = useState(false);\n\n  const setErrorRecoil = useSetRecoilState(errorAtom);\n  const [sendNotification] = useNotification();\n\n  const setUpdatedModeOnServer = (requestedMode, previousMode) => {\n    axios\n      .post(REST_URL, {\n        symbol,\n        mode: requestedMode,\n        position_side,\n      })\n      .then((response) => {\n        sendNotification({\n          msg: `Your mode was correctly set to ${requestedMode} for ${symbol} ${position_side}`,\n          variant: \"success\",\n        });\n      })\n      .catch((err) => {\n        setErrorRecoil(err);\n        sendNotification({\n          msg: `Something wrong happened when setting ${symbol} ${position_side} to ${requestedMode}`,\n          variant: \"error\",\n        });\n        setMode(previousMode);\n      });\n  };\n\n  const handleChange = (event) => {\n    const requestedMode = event.target.value;\n\n    setPreviousMode(mode);\n    setMode(requestedMode);\n\n    if (MODES[requestedMode]?.requiresValidation) {\n      setOpenConfirmation(true);\n    } else {\n      setUpdatedModeOnServer(requestedMode, previousMode);\n    }\n  };\n\n  const onConfirm = () => {\n    setUpdatedModeOnServer(mode, previousMode);\n    setOpenConfirmation(false);\n  };\n\n  const onCloseConfirmation = () => {\n    setOpenConfirmation(false);\n    setMode(previousMode);\n  };\n\n  return (\n    <>\n      <FormControl sx={{ minWidth: 125 }} size=\"small\">\n        <Select value={MODES[mode]?.value} onChange={handleChange}>\n          {Object.values(MODES).map((m) => (\n            <MenuItem key={m.value} value={m.value}>\n              {m.label}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <ValidationPopup\n        open={openConfirmation}\n        setOpen={setOpenConfirmation}\n        onConfirm={onConfirm}\n        onClose={onCloseConfirmation}\n        mode={mode}\n      />\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\n\nimport {\n  Box,\n  Collapse,\n  IconButton,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\n\nimport { useRecoilValue } from \"recoil\";\nimport Label from \"src/components/Label\";\nimport { dataAtom } from \"src/recoil/atoms\";\nimport ModeSelector from \"./ModeSelector\";\n\nconst PositionRow = ({ symbol, side, positionSides }) => {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === \"light\";\n\n  const { open_orders } = useRecoilValue(dataAtom);\n  const [open, setOpen] = useState(false);\n\n  const { cost, entry_price, position_size, current_price, mode } = positionSides && positionSides[side];\n  const symbolOpenOrders = open_orders[symbol].filter((order) => order?.position_side === side);\n  const dca_number = symbolOpenOrders.filter((order) => order?.order_type_identifier === \"DCA\").length;\n  const tp_number = symbolOpenOrders.filter((order) => order?.order_type_identifier === \"TP\").length;\n\n  return (\n    <>\n      <TableRow>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n\n        <TableCell>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n            <Typography color={side === \"LONG\" ? \"#54D62C\" : \"error\"} variant=\"subtitle2\">\n              {symbol}\n            </Typography>\n          </Stack>\n        </TableCell>\n\n        <TableCell>{cost.slice(0, 5)}</TableCell>\n        <TableCell>{position_size}</TableCell>\n        <TableCell>{entry_price.slice(0, 5)}</TableCell>\n        <TableCell>{current_price.slice(0, 5)}</TableCell>\n\n        <TableCell>\n          <Label variant={isLight ? \"ghost\" : \"filled\"}>{tp_number}</Label>\n        </TableCell>\n        <TableCell>\n          <Label\n            variant={isLight ? \"ghost\" : \"filled\"}\n            color={dca_number > 1 || position_size < 1 ? \"default\" : dca_number === 1 ? \"warning\" : \"error\"}\n          >\n            {dca_number}\n          </Label>\n        </TableCell>\n        <TableCell>\n          <ModeSelector currentMode={mode} symbol={symbol} position_side={side} />\n        </TableCell>\n      </TableRow>\n\n      {/* Table for the Open Orders */}\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={9}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 0 }}>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Open Order Type</TableCell>\n                    <TableCell>Cost</TableCell>\n                    <TableCell align=\"right\">Price</TableCell>\n                    <TableCell align=\"right\">Quantity</TableCell>\n                    <TableCell align=\"right\">Type</TableCell>\n                    <TableCell align=\"right\">Side</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {symbolOpenOrders\n                    .sort((order1, order2) => order2.price - order1.price)\n                    .map(({ id, order_type_identifier, quantity, side, type, cost, price }) => (\n                      <TableRow key={id}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {order_type_identifier}\n                        </TableCell>\n                        <TableCell>{cost.slice(0, 5)}</TableCell>\n                        <TableCell align=\"right\">{price.slice(0, 5)}</TableCell>\n                        <TableCell align=\"right\">{quantity}</TableCell>\n                        <TableCell align=\"right\">{type}</TableCell>\n                        <TableCell align=\"right\">\n                          <Typography color={side === \"BUY\" ? \"#54D62C\" : \"error\"} variant=\"subtitle2\">\n                            {side}\n                          </Typography>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n};\n\nexport default PositionRow;\n","// @mui\nimport { Card, Table, TableRow, TableBody, TableCell, TableHead, CardHeader, TableContainer } from \"@mui/material\";\n\n// Components\nimport Scrollbar from \"../../Scrollbar\";\nimport { useRecoilValue } from \"recoil\";\nimport { dataAtom } from \"src/recoil/atoms\";\nimport PositionRow from \"./PositionRow\";\n\n// ----------------------------------------------------------------------\n\nexport default function WidgetPositions() {\n  const { positions } = useRecoilValue(dataAtom);\n\n  return (\n    <>\n      <Card>\n        <CardHeader title=\"Positions\" sx={{ mb: 1 }} />\n        <Scrollbar>\n          <TableContainer sx={{ minWidth: 720 }}>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  {/* For the arrow */}\n                  <TableCell />\n\n                  <TableCell sx={{ minWidth: 40 }}>Symbol</TableCell>\n                  <TableCell sx={{ minWidth: 40 }}>Cost</TableCell>\n                  <TableCell sx={{ minWidth: 40 }}>Size</TableCell>\n                  <TableCell sx={{ minWidth: 40 }}>Position price</TableCell>\n                  <TableCell sx={{ minWidth: 40 }}>Current price</TableCell>\n                  <TableCell sx={{ minWidth: 40 }}>TP</TableCell>\n                  <TableCell sx={{ minWidth: 40 }}>DCA</TableCell>\n                  <TableCell sx={{ minWidth: 40 }}>Mode</TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {Object.keys(positions).map((symbol) => {\n                  const positionSides = positions[symbol];\n\n                  return Object.keys(positionSides).map((side) => {\n                    return (\n                      <PositionRow\n                        key={`${symbol}_${side}`}\n                        symbol={symbol}\n                        side={side}\n                        positionSides={positionSides}\n                      />\n                    );\n                  });\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Scrollbar>\n      </Card>\n    </>\n  );\n}\n","// @mui\nimport { Card, Typography, CardHeader, CardContent, Stack } from \"@mui/material\";\nimport {\n  Timeline,\n  TimelineDot,\n  TimelineItem,\n  TimelineContent,\n  TimelineSeparator,\n  TimelineConnector,\n} from \"@mui/lab\";\n// utils\nimport { fDateTime } from \"../../utils/formatTime\";\nimport { useRecoilValue } from \"recoil\";\nimport { dataAtom } from \"src/recoil/atoms\";\n\n// ----------------------------------------------------------------------\n\nexport default function WidgetOrder() {\n  const { latest_orders } = useRecoilValue(dataAtom);\n\n  return (\n    <Card\n      sx={{\n        \"& .MuiTimelineItem-missingOppositeContent:before\": {\n          display: \"none\",\n        },\n      }}\n    >\n      <CardHeader title=\"Latest orders\" />\n      <CardContent>\n        <Timeline>\n          {latest_orders.map((order, index) => (\n            <OrderItem key={order.id} order={order} isLast={index === latest_orders.length - 1} />\n          ))}\n        </Timeline>\n      </CardContent>\n    </Card>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction OrderItem({ order, isLast }) {\n  const { event_time, order_type_identifier, position_side, quantity, symbol } = order;\n\n  return (\n    <TimelineItem>\n      <TimelineSeparator>\n        <TimelineDot\n          color={\n            (order_type_identifier === \"TP_REFILL\" && \"warning\") ||\n            (order_type_identifier === \"TP\" && \"success\") ||\n            (order_type_identifier === \"INITIAL_ENTRY\" && \"info\") ||\n            \"error\"\n          }\n        />\n        {isLast ? null : <TimelineConnector />}\n      </TimelineSeparator>\n      <TimelineContent>\n        <Stack direction=\"row\" spacing={0.5}>\n          <Typography display=\"inline\" variant=\"subtitle2\">\n            {order_type_identifier}\n          </Typography>\n          <Typography display=\"inline\" variant=\"subtitle2\" color={position_side === \"LONG\" ? \"#54D62C\" : \"error\"}>\n            {symbol}\n          </Typography>\n          <Typography display=\"inline\" variant=\"subtitle2\">\n            {quantity}\n          </Typography>\n        </Stack>\n\n        <Typography display=\"block\" variant=\"caption\" sx={{ color: \"text.secondary\" }}>\n          {fDateTime(event_time)}\n        </Typography>\n      </TimelineContent>\n    </TimelineItem>\n  );\n}\n","// @mui\nimport { Container, Grid } from \"@mui/material\";\n\n// hooks\nimport useSettings from \"../hooks/useSettings\";\n// components\nimport Page from \"../components/Page\";\nimport WidgetPositions from \"src/components/widgets/WidgetPositions/WidgetPositions\";\nimport WidgetOrder from \"src/components/widgets/WidgetOrder\";\n\n// ----------------------------------------------------------------------\n\nexport default function OverviewPage() {\n  const { themeStretch } = useSettings();\n\n  return (\n    <Page title=\"Overview\">\n      <Container maxWidth={themeStretch ? false : \"xl\"}>\n        <Grid container spacing={3}>\n          <Grid item xs={9}>\n            <WidgetPositions />\n          </Grid>\n\n          <Grid item xs={6} md={6} lg={2.8}>\n            <WidgetOrder />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}
{"version":3,"file":"static/js/317.80962b85.chunk.js","mappings":"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","sources":["components/Page.js","components/Label.js","components/widgets/WidgetPositions/constants.js","components/widgets/WidgetPositions/ValidationPopup.js","components/alerts/hook.js","components/widgets/WidgetPositions/services.js","components/widgets/WidgetPositions/ModeSelector.js","components/widgets/WidgetPositions/ClosePosition.js","components/widgets/WidgetPositions/PositionRow.js","components/widgets/WidgetPositions/WidgetPositions.js","components/widgets/WidgetOrder.js","pages/Overview.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet-async\";\nimport { forwardRef } from \"react\";\n// @mui\nimport { Box } from \"@mui/material\";\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = \"\", meta, ...other }, ref) => (\n  <>\n    <Helmet>\n      <title>{`${title} | Hawkbot`}</title>\n      {meta}\n    </Helmet>\n\n    <Box ref={ref} {...other}>\n      {children}\n    </Box>\n  </>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n  meta: PropTypes.node,\n};\n\nexport default Page;\n","import PropTypes from \"prop-types\";\n// @mui\nimport { alpha, styled } from \"@mui/material/styles\";\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(\"span\")(({ theme, ownerState }) => {\n  const isLight = theme.palette.mode === \"light\";\n  const { color, variant } = ownerState;\n\n  const styleFilled = (color) => ({\n    color: theme.palette[color].contrastText,\n    backgroundColor: theme.palette[color].main,\n  });\n\n  const styleOutlined = (color) => ({\n    color: theme.palette[color].main,\n    backgroundColor: \"transparent\",\n    border: `1px solid ${theme.palette[color].main}`,\n  });\n\n  const styleGhost = (color) => ({\n    color: theme.palette[color][isLight ? \"dark\" : \"light\"],\n    backgroundColor: alpha(theme.palette[color].main, 0.16),\n  });\n\n  return {\n    height: 22,\n    minWidth: 22,\n    lineHeight: 0,\n    borderRadius: 8,\n    cursor: \"default\",\n    alignItems: \"center\",\n    whiteSpace: \"nowrap\",\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    padding: theme.spacing(0, 1),\n    color: theme.palette.grey[800],\n    fontSize: theme.typography.pxToRem(12),\n    fontFamily: theme.typography.fontFamily,\n    backgroundColor: theme.palette.grey[300],\n    fontWeight: theme.typography.fontWeightBold,\n\n    ...(color !== \"default\"\n      ? {\n          ...(variant === \"filled\" && { ...styleFilled(color) }),\n          ...(variant === \"outlined\" && { ...styleOutlined(color) }),\n          ...(variant === \"ghost\" && { ...styleGhost(color) }),\n        }\n      : {\n          ...(variant === \"outlined\" && {\n            backgroundColor: \"transparent\",\n            color: theme.palette.text.primary,\n            border: `1px solid ${theme.palette.grey[500_32]}`,\n          }),\n          ...(variant === \"ghost\" && {\n            color: isLight ? theme.palette.text.secondary : theme.palette.common.white,\n            backgroundColor: theme.palette.grey[500_16],\n          }),\n        }),\n  };\n});\n\n// ----------------------------------------------------------------------\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\"]),\n  variant: PropTypes.oneOf([\"filled\", \"outlined\", \"ghost\"]),\n};\n\nexport default function Label({ color = \"default\", variant = \"ghost\", children, ...other }) {\n  return (\n    <RootStyle ownerState={{ color, variant }} {...other}>\n      {children}\n    </RootStyle>\n  );\n}\n","export const MODES = {\n  NORMAL: {\n    label: \"NORMAL\",\n    value: \"NORMAL\",\n  },\n  GRACEFUL_STOP: {\n    label: \"GRACEFUL\",\n    value: \"GRACEFUL_STOP\",\n  },\n  EXIT_ONLY: {\n    label: \"EXIT_ONLY\",\n    value: \"EXIT_ONLY\",\n  },\n  MANUAL: {\n    label: \"MANUAL\",\n    value: \"MANUAL\",\n  },\n  PANIC: {\n    label: \"PANIC\",\n    value: \"PANIC\",\n    requiresValidation: true,\n  },\n  WIGGLE: {\n    label: \"WIGGLE\",\n    value: \"WIGGLE\",\n  },\n};\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Slide from \"@mui/material/Slide\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function ValidationPopup({ open, onConfirm, mode, onClose }) {\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        TransitionComponent={Transition}\n        keepMounted\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle>Warning regarding {mode} mode</DialogTitle>\n        <DialogContent sx={{ pb: 0, mt: 2.4 }}>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            This mode will sell your position with a MARKET order.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button variant=\"contained\" onClick={onConfirm}>\n            Confirm\n          </Button>\n          <Button variant=\"outlined\" onClick={onClose}>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/material/SvgIcon/SvgIcon\";\n\nconst useNotification = () => {\n  const [conf, setConf] = useState({});\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    if (conf?.msg) {\n      let variant = \"info\";\n      if (conf.variant) {\n        variant = conf.variant;\n      }\n\n      enqueueSnackbar(conf.msg, {\n        variant: variant,\n        autoHideDuration: 5000,\n        action: (key) => {\n          return (\n            <Fragment>\n              <IconButton\n                onClick={() => {\n                  closeSnackbar(key);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            </Fragment>\n          );\n        },\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        },\n      });\n    }\n  }, [conf, enqueueSnackbar, closeSnackbar]);\n  return [setConf];\n};\n\nexport default useNotification;\n","import axios from \"axios\";\n\nconst SET_MODE_URL = \"http://localhost:6969/setMode\";\nconst CANCEL_ORDER_URL = \"http://localhost:6969/cancelOrder\";\nconst CLOSE_POSITION_URL = \"http://localhost:6969/closePosition\";\n\nexport const setModeOnServer = (requestedMode, previousMode, symbol, position_side, setMode, sendNotification) => {\n  axios\n    .post(SET_MODE_URL, {\n      symbol,\n      mode: requestedMode,\n      position_side,\n    })\n    .then((response) => {\n      sendNotification({\n        msg: `Your mode was correctly set to ${requestedMode} for ${symbol} ${position_side}`,\n        variant: \"success\",\n      });\n    })\n    .catch((err) => {\n      sendNotification({\n        msg: `Something wrong happened when setting ${symbol} ${position_side} to ${requestedMode}`,\n        variant: \"error\",\n      });\n      setMode(previousMode);\n    });\n};\n\nexport const cancelOrderOnServer = (symbol, order_id, sendNotification) => {\n  axios\n    .post(CANCEL_ORDER_URL, {\n      symbol,\n      order_id,\n    })\n    .then((response) => {\n      sendNotification({\n        msg: `Your order ${order_id} for ${symbol} was cancelled`,\n        variant: \"success\",\n      });\n    })\n    .catch((err) => {\n      sendNotification({\n        msg: `Something wrong happened when cancelling order ${order_id} for ${symbol}`,\n        variant: \"error\",\n      });\n    });\n};\n\nexport const closePositionOnServer = (symbol, position_side, orderType, sendNotification) => {\n  axios\n    .post(CLOSE_POSITION_URL, {\n      symbol,\n      position_side,\n      orderType,\n    })\n    .then((response) => {\n      sendNotification({\n        msg: `A ${orderType} close for ${symbol} ${position_side} was sent`,\n        variant: \"success\",\n      });\n    })\n    .catch((err) => {\n      sendNotification({\n        msg: `Something wrong happened when trying to ${orderType} close for ${symbol} ${position_side}`,\n        variant: \"error\",\n      });\n    });\n};\n","import React, { useState } from \"react\";\n\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nimport { MODES } from \"./constants\";\nimport ValidationPopup from \"./ValidationPopup\";\nimport useNotification from \"src/components/alerts/hook\";\nimport { setModeOnServer } from \"./services\";\n\nexport default function ModeSelector({ currentMode, symbol, position_side }) {\n  const [mode, setMode] = useState(currentMode);\n  const [previousMode, setPreviousMode] = useState(currentMode);\n  const [openConfirmation, setOpenConfirmation] = useState(false);\n\n  const [sendNotification] = useNotification();\n\n  const handleChange = (event) => {\n    const requestedMode = event.target.value;\n\n    setPreviousMode(mode);\n    setMode(requestedMode);\n\n    if (MODES[requestedMode]?.requiresValidation) {\n      setOpenConfirmation(true);\n    } else {\n      setModeOnServer(requestedMode, previousMode, symbol, position_side, setMode, sendNotification);\n    }\n  };\n\n  const onConfirm = () => {\n    setModeOnServer(mode, previousMode, symbol, position_side, setMode, sendNotification);\n    setOpenConfirmation(false);\n  };\n\n  const onCloseConfirmation = () => {\n    setOpenConfirmation(false);\n    setMode(previousMode);\n  };\n\n  return (\n    <>\n      <FormControl sx={{ minWidth: 125 }} size=\"small\">\n        <Select value={MODES[mode]?.value} onChange={handleChange}>\n          {Object.values(MODES).map((m) => (\n            <MenuItem key={m.value} value={m.value}>\n              {m.label}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <ValidationPopup open={openConfirmation} onConfirm={onConfirm} onClose={onCloseConfirmation} mode={mode} />\n    </>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  IconButton,\n  Radio,\n  RadioGroup,\n  Slide,\n} from \"@mui/material\";\nimport CancelOutlinedIcon from \"@mui/icons-material/CancelOutlined\";\nimport useNotification from \"src/components/alerts/hook\";\nimport { isEmpty } from \"lodash\";\nimport { closePositionOnServer } from \"./services\";\n\nconst ClosePosition = ({ symbol, position_side, position_size }) => {\n  const [sendNotification] = useNotification();\n  const [orderType, setOrderType] = useState(null);\n  const [openConfirmation, setOpenConfirmation] = useState(false);\n\n  const isCloseDisabled = orderType === null;\n  const isIconDisabled = isEmpty(position_size);\n\n  const handleChange = (event) => {\n    setOrderType(event.target.value);\n  };\n\n  const onClose = () => {\n    setOrderType(null);\n    setOpenConfirmation(false);\n  };\n\n  const onConfirm = () => {\n    closePositionOnServer(symbol, position_side, orderType, sendNotification);\n    onClose();\n  };\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"close\"\n        size=\"small\"\n        onClick={() => setOpenConfirmation(true)}\n        disabled={isIconDisabled}\n        color={isIconDisabled ? \"default\" : \"error\"}\n      >\n        <CancelOutlinedIcon fontSize=\"small\" />\n      </IconButton>\n\n      <Dialog\n        open={openConfirmation}\n        onClose={onClose}\n        TransitionComponent={Transition}\n        keepMounted\n        aria-describedby=\"alert-dialog-slide-close-position\"\n      >\n        <DialogTitle>Order type selection</DialogTitle>\n        <DialogContent sx={{ pb: 0, mt: 2.4 }}>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Choose the order type for closing your {symbol} {position_side} position\n          </DialogContentText>\n          <FormControl>\n            <RadioGroup\n              row\n              aria-labelledby=\"ordertype-controlled-radio-buttons-group\"\n              name=\"controlled-radio-buttons-group\"\n              value={orderType}\n              onChange={handleChange}\n            >\n              <FormControlLabel value=\"LIMIT\" control={<Radio />} label=\"Limit\" />\n              <FormControlLabel value=\"MARKET\" control={<Radio />} label=\"Market\" />\n            </RadioGroup>\n          </FormControl>\n        </DialogContent>\n\n        <DialogActions>\n          <Button variant=\"contained\" disabled={isCloseDisabled} onClick={onConfirm}>\n            Close position\n          </Button>\n          <Button variant=\"outlined\" onClick={onClose}>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ClosePosition;\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n","import React, { useState } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\n\nimport {\n  Box,\n  Collapse,\n  IconButton,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport CancelOutlinedIcon from \"@mui/icons-material/CancelOutlined\";\n\nimport { useRecoilValue } from \"recoil\";\nimport Label from \"src/components/Label\";\nimport { dataAtom } from \"src/recoil/atoms\";\nimport ModeSelector from \"./ModeSelector\";\nimport { cancelOrderOnServer } from \"./services\";\nimport useNotification from \"src/components/alerts/hook\";\nimport ClosePosition from \"./ClosePosition\";\n\nconst PositionRow = ({ symbol, side, positionSides }) => {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === \"light\";\n\n  const [sendNotification] = useNotification();\n  const { open_orders } = useRecoilValue(dataAtom);\n  const [open, setOpen] = useState(false);\n\n  const { cost, entry_price, position_size, current_price, mode, pnl_abs, pnl_pct } =\n    positionSides && positionSides[side];\n  const symbolOpenOrders = open_orders[symbol].filter((order) => order?.position_side === side);\n  const dca_number = symbolOpenOrders.filter(\n    (order) => order?.order_type_identifier === \"DCA\" || order?.order_type_identifier === \"ENTRY\"\n  ).length;\n  const tp_number = symbolOpenOrders.filter((order) => order?.order_type_identifier === \"TP\").length;\n\n  const ClickableTableCell = ({ children }) => (\n    <TableCell onClick={() => setOpen(!open)} sx={{ cursor: \"pointer\" }}>\n      {children}\n    </TableCell>\n  );\n\n  return (\n    <>\n      <TableRow>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n\n        <ClickableTableCell>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n            <Typography color={side === \"LONG\" ? \"#54D62C\" : \"error\"} variant=\"subtitle2\">\n              {symbol}\n            </Typography>\n          </Stack>\n        </ClickableTableCell>\n\n        <ClickableTableCell>{cost}</ClickableTableCell>\n        <ClickableTableCell>{position_size}</ClickableTableCell>\n        <ClickableTableCell>{entry_price}</ClickableTableCell>\n        <ClickableTableCell>{current_price}</ClickableTableCell>\n        <ClickableTableCell>\n          <Typography color={pnl_abs < 0 ? \"error\" : \"#54D62C\"} variant=\"inherit\">\n            {pnl_abs} {pnl_pct}\n          </Typography>\n        </ClickableTableCell>\n\n        <ClickableTableCell>\n          <Label variant={isLight ? \"ghost\" : \"filled\"}>{tp_number}</Label>\n        </ClickableTableCell>\n        <ClickableTableCell>\n          <Label\n            variant={isLight ? \"ghost\" : \"filled\"}\n            color={dca_number > 1 || position_size < 1 ? \"default\" : dca_number === 1 ? \"warning\" : \"error\"}\n          >\n            {dca_number}\n          </Label>\n        </ClickableTableCell>\n        <TableCell>\n          <ModeSelector currentMode={mode} symbol={symbol} position_side={side} />\n        </TableCell>\n        <TableCell align=\"right\">\n          <ClosePosition symbol={symbol} position_side={side} position_size={position_size} />\n        </TableCell>\n      </TableRow>\n\n      {/* Table for the Open Orders */}\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={12}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 0 }}>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Order Type</TableCell>\n                    <TableCell>Cost</TableCell>\n                    <TableCell align=\"right\">Price</TableCell>\n                    <TableCell align=\"right\">Quantity</TableCell>\n                    <TableCell align=\"right\">Type</TableCell>\n                    <TableCell align=\"right\">Side</TableCell>\n                    <TableCell align=\"right\">Cancel</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {symbolOpenOrders\n                    .sort((order1, order2) => order2.price - order1.price)\n                    .map(({ id, order_type_identifier, quantity, side, type, cost, price }) => (\n                      <TableRow key={id}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {order_type_identifier}\n                        </TableCell>\n                        <TableCell>{cost}</TableCell>\n                        <TableCell align=\"right\">{price}</TableCell>\n                        <TableCell align=\"right\">{quantity}</TableCell>\n                        <TableCell align=\"right\">{type}</TableCell>\n                        <TableCell align=\"right\">\n                          <Typography color={side === \"BUY\" ? \"#54D62C\" : \"error\"} variant=\"subtitle2\">\n                            {side}\n                          </Typography>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          <IconButton\n                            aria-label=\"close\"\n                            size=\"small\"\n                            color=\"default\"\n                            onClick={() => cancelOrderOnServer(symbol, id, sendNotification)}\n                          >\n                            <CancelOutlinedIcon fontSize=\"small\" />\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n};\n\nexport default PositionRow;\n","// @mui\nimport {\n  Card,\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHead,\n  CardHeader,\n  TableContainer,\n  Switch,\n  Stack,\n  Typography,\n} from \"@mui/material\";\n\n// Components\nimport Scrollbar from \"../../Scrollbar\";\nimport { useRecoilValue } from \"recoil\";\nimport { dataAtom } from \"src/recoil/atoms\";\nimport PositionRow from \"./PositionRow\";\nimport { useState } from \"react\";\nimport { isEmpty } from \"lodash\";\n\n// ----------------------------------------------------------------------\n\nexport default function WidgetPositions() {\n  const [showInactivePositions, setShowInactivePositions] = useState(true);\n  const { positions } = useRecoilValue(dataAtom);\n\n  return (\n    <>\n      <Card>\n        <CardHeader\n          title=\"Positions\"\n          sx={{ mb: 1 }}\n          action={\n            <Stack direction=\"row\" alignItems=\"center\">\n              <Switch\n                size=\"small\"\n                checked={showInactivePositions}\n                onChange={(e) => setShowInactivePositions(e.target.checked)}\n                inputProps={{ \"aria-label\": \"controlled\" }}\n              />\n              <Typography variant=\"subtitle2\">Show inactive positions</Typography>\n            </Stack>\n          }\n        />\n\n        <Scrollbar>\n          <TableContainer sx={{ minWidth: 720 }}>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  {/* For the arrow */}\n                  <TableCell />\n\n                  <TableCell sx={{ minWidth: 40 }}>Symbol</TableCell>\n                  <TableCell sx={{ minWidth: 40 }}>Cost</TableCell>\n                  <TableCell sx={{ minWidth: 40 }}>Size</TableCell>\n                  <TableCell sx={{ minWidth: 40 }}>Position price</TableCell>\n                  <TableCell sx={{ minWidth: 40 }}>Current price</TableCell>\n                  <TableCell sx={{ minWidth: 40 }}>PnL</TableCell>\n                  <TableCell sx={{ minWidth: 20 }}>TP</TableCell>\n                  <TableCell sx={{ minWidth: 20 }}>DCA</TableCell>\n                  <TableCell sx={{ minWidth: 40 }}>Mode</TableCell>\n                  <TableCell sx={{ minWidth: 20 }}>Close</TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {Object.keys(positions).map((symbol) => {\n                  const positionSides = positions[symbol];\n\n                  return Object.keys(positionSides).map((side) => {\n                    // If switched off, don't display inactive positions\n                    if (!showInactivePositions && isEmpty(positionSides[side].position_size)) {\n                      return null;\n                    }\n\n                    return (\n                      <PositionRow\n                        key={`${symbol}_${side}`}\n                        symbol={symbol}\n                        side={side}\n                        positionSides={positionSides}\n                      />\n                    );\n                  });\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Scrollbar>\n      </Card>\n    </>\n  );\n}\n","// @mui\nimport { Card, Typography, CardHeader, CardContent, Stack } from \"@mui/material\";\nimport {\n  Timeline,\n  TimelineDot,\n  TimelineItem,\n  TimelineContent,\n  TimelineSeparator,\n  TimelineConnector,\n} from \"@mui/lab\";\n// utils\nimport { fTime } from \"../../utils/formatTime\";\nimport { useRecoilValue } from \"recoil\";\nimport { dataAtom } from \"src/recoil/atoms\";\n\n// ----------------------------------------------------------------------\n\nexport default function WidgetOrder() {\n  const { latest_orders } = useRecoilValue(dataAtom);\n\n  return (\n    <Card\n      sx={{\n        \"& .MuiTimelineItem-missingOppositeContent:before\": {\n          display: \"none\",\n        },\n        \".MuiTimelineItem-root\": {\n          minHeight: 60,\n        },\n      }}\n    >\n      <CardHeader title=\"Latest orders\" />\n      <CardContent>\n        <Timeline>\n          {latest_orders\n            .filter((order) => order?.status === \"FILLED\")\n            .map((order, index) => (\n              <OrderItem key={order.id} order={order} isLast={index === latest_orders.length - 1} />\n            ))}\n        </Timeline>\n      </CardContent>\n    </Card>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction OrderItem({ order, isLast }) {\n  const { event_time, order_type_identifier, position_side, quantity, symbol, price } = order;\n\n  return (\n    <TimelineItem>\n      <TimelineSeparator>\n        <TimelineDot\n          color={\n            (order_type_identifier === \"TP_REFILL\" && \"warning\") ||\n            (order_type_identifier === \"TP\" && \"success\") ||\n            (order_type_identifier === \"INITIAL_ENTRY\" && \"info\") ||\n            \"error\"\n          }\n        />\n        {isLast ? null : <TimelineConnector />}\n      </TimelineSeparator>\n\n      <TimelineContent>\n        <Stack direction=\"row\" spacing={0.5}>\n          <Typography display=\"inline\" variant=\"subtitle2\" color={position_side === \"LONG\" ? \"#54D62C\" : \"error\"}>\n            {symbol}\n          </Typography>\n          <Typography display=\"inline\" variant=\"subtitle2\">\n            {order_type_identifier}\n          </Typography>\n        </Stack>\n\n        <Stack direction=\"row\" spacing={0.5}>\n          <Typography display=\"inline\" variant=\"caption\">\n            {quantity} @ {price} -\n          </Typography>\n          <Typography display=\"inline\" variant=\"caption\">\n            {fTime(event_time)}\n          </Typography>\n        </Stack>\n      </TimelineContent>\n    </TimelineItem>\n  );\n}\n","// @mui\nimport { Container, Grid } from \"@mui/material\";\n\n// hooks\nimport useSettings from \"../hooks/useSettings\";\n// components\nimport Page from \"../components/Page\";\nimport WidgetPositions from \"src/components/widgets/WidgetPositions/WidgetPositions\";\nimport WidgetOrder from \"src/components/widgets/WidgetOrder\";\n\n// ----------------------------------------------------------------------\n\nexport default function OverviewPage() {\n  const { themeStretch } = useSettings();\n\n  return (\n    <Page title=\"Overview\">\n      <Container maxWidth={themeStretch ? false : \"xl\"}>\n        <Grid container spacing={3}>\n          <Grid item xs={9}>\n            <WidgetPositions />\n          </Grid>\n\n          <Grid item xs={5} md={5} lg={2.6}>\n            <WidgetOrder />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n"],"names":["Page","forwardRef","_ref","ref","children","_ref$title","title","meta","other","_objectWithoutProperties","_excluded","_jsxs","_Fragment","Helmet","_jsx","concat","Box","_objectSpread","propTypes","PropTypes","RootStyle","styled","theme","ownerState","isLight","palette","mode","color","variant","height","minWidth","lineHeight","borderRadius","cursor","alignItems","whiteSpace","display","justifyContent","padding","spacing","grey","fontSize","typography","pxToRem","fontFamily","backgroundColor","fontWeight","fontWeightBold","contrastText","main","styleFilled","border","styleOutlined","alpha","styleGhost","text","primary","secondary","common","white","Label","_ref2","_ref2$color","_ref2$variant","MODES","NORMAL","label","value","GRACEFUL_STOP","EXIT_ONLY","MANUAL","PANIC","requiresValidation","WIGGLE","Transition","React","props","Slide","direction","ValidationPopup","open","onConfirm","onClose","Dialog","TransitionComponent","keepMounted","DialogTitle","DialogContent","sx","pb","mt","DialogContentText","id","DialogActions","Button","onClick","_useState","useState","_useState2","_slicedToArray","conf","setConf","_useSnackbar","useSnackbar","enqueueSnackbar","closeSnackbar","useEffect","msg","autoHideDuration","action","key","Fragment","IconButton","CloseIcon","anchorOrigin","vertical","horizontal","setModeOnServer","requestedMode","previousMode","symbol","position_side","setMode","sendNotification","axios","then","response","catch","err","ModeSelector","_MODES$mode","currentMode","_useState3","_useState4","setPreviousMode","_useState5","_useState6","openConfirmation","setOpenConfirmation","_useNotification","useNotification","FormControl","size","Select","onChange","event","_MODES$requestedMode","target","Object","values","map","m","MenuItem","position_size","orderType","setOrderType","isCloseDisabled","isIconDisabled","isEmpty","disabled","CancelOutlinedIcon","RadioGroup","row","name","FormControlLabel","control","Radio","closePositionOnServer","side","positionSides","useTheme","open_orders","useRecoilValue","dataAtom","setOpen","cost","entry_price","current_price","pnl_abs","pnl_pct","symbolOpenOrders","filter","order","dca_number","order_type_identifier","length","tp_number","ClickableTableCell","_ref3","TableCell","TableRow","KeyboardArrowUpIcon","KeyboardArrowDownIcon","Stack","Typography","align","ClosePosition","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","margin","Table","TableHead","TableBody","sort","order1","order2","price","_ref4","quantity","type","component","scope","order_id","cancelOrderOnServer","WidgetPositions","showInactivePositions","setShowInactivePositions","positions","Card","CardHeader","mb","Switch","checked","e","inputProps","Scrollbar","TableContainer","keys","PositionRow","WidgetOrder","latest_orders","minHeight","CardContent","Timeline","status","index","OrderItem","isLast","event_time","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","fTime","OverviewPage","themeStretch","useSettings","Container","maxWidth","Grid","container","item","xs","md","lg"],"sourceRoot":""}